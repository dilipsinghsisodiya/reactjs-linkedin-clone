{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avtar","Icon","title","onClick","useSelector","className","Avatar","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","src","alt","type","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","photoUrl","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","useReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ede9d1b0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user: null,\n  },\n\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react'\r\nimport \"./HeaderOption.css\"\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\n\r\n\r\n\r\nfunction HeaderOption({avtar,Icon, title, onClick}) {\r\n\r\n    const user = useSelector(selectUser);\r\n   \r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\">\r\n            {Icon && <Icon className=\"headerOption__icon\" />}\r\n            \r\n            {avtar && (\r\n                <Avatar className=\"headerOption__icon\">{user?.email[0]}</Avatar>\r\n            )}\r\n\r\n            <h3 className=\"headerOption__title\"> {title} </h3>            \r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderOption;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBdKngGg5-fbePYVE52TtKsl-kzxI49_4U\",\r\n    authDomain: \"linkedin-clone-dd-c7747.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-dd-c7747\",\r\n    storageBucket: \"linkedin-clone-dd-c7747.appspot.com\",\r\n    messagingSenderId: \"1037342286383\",\r\n    appId: \"1:1037342286383:web:7c19e746fb02d797209cda\",\r\n    measurementId: \"G-MHB64JFFMV\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  \r\n  export { db, auth};","import React from 'react';\r\nimport './Header.css'; \r\nimport HeaderOption from './HeaderOption';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { logout } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction Header() {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const logoutOfApp = () => {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n\r\n          <div className=\"header__left\">\r\n              <img src=\"logo.svg\" alt=\"logo\" />\r\n              <div className=\"header__search\">\r\n                  <SearchIcon />\r\n                  <input type=\"text\" placeholder=\"Search for jobs, companies...\" />\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"header__right\">\r\n\r\n          <HeaderOption Icon={HomeIcon} title=\"Home\" />\r\n          <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\r\n          <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\r\n          <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\r\n          <HeaderOption Icon={NotificationsIcon} title=\"Notifications\" />\r\n          <HeaderOption avtar={true} title=\"Me\" onClick={logoutOfApp} />\r\n\r\n          </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n ","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n    \r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"/banner.jfif\" alt=\"\" />\r\n                <Avatar src={user.photoUrl} className=\"sidebar__avtar\">{user.email[0]}</Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n\r\n            <div className=\"sidebar__stats\">  \r\n               <div className=\"sidebar__stat\">\r\n                <p>Who viewed you</p>\r\n                <p className=\"sidebar__statNumber\">2.543</p>\r\n               </div> \r\n\r\n               <div className=\"sidebar__stat\">\r\n                <p>Who viewed post</p>\r\n                <p className=\"sidebar__statNumber\">2.448</p>\r\n               </div> \r\n            </div>\r\n\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p>\r\n                {recentItem('reactjs')}\r\n                {recentItem('programming')}\r\n                {recentItem('softwearengineering')}\r\n                {recentItem('design')}\r\n                {recentItem('developer')}\r\n\r\n            </div>\r\n            \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport \"./InputOption.css\";\r\n\r\nfunction InputOption({Icon, title, color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n         <Icon style={{color:color}} />\r\n            <h4 className=\"inputOption__title\"> {title} </h4>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption;\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, {forwardRef}  from 'react';\r\nimport \"./Post.css\";\r\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\r\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport InputOption from './InputOption';\r\n\r\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar> \r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n            <div className=\"post__buttons\">\r\n                \r\n                <InputOption \r\n                Icon={ThumbUpAltOutlinedIcon} \r\n                title=\"Like\"\r\n                color=\"gray\"\r\n                />\r\n\r\n                <InputOption \r\n                Icon={ChatOutlinedIcon} \r\n                title=\"Comment\"\r\n                color=\"gray\"\r\n                />\r\n                \r\n                <InputOption \r\n                Icon={ShareOutlinedIcon} \r\n                title=\"Share\"\r\n                color=\"gray\"\r\n                />\r\n\r\n                <InputOption \r\n                Icon={SendOutlinedIcon} \r\n                title=\"Send\"\r\n                color=\"gray\"\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CreateIcon from \"@material-ui/icons/Create\"\r\nimport ImageIcon from \"@material-ui/icons/Image\"\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\"\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\"\r\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\r\nimport InputOption from './InputOption';\r\nimport firebase from 'firebase';\r\nimport \"./Feed.css\";\r\nimport Post from './Post';\r\nimport { db } from './firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport FlipMove from \"react-flip-move\";\r\n\r\nfunction Feed() {\r\n\r\n    const user = useSelector(selectUser);\r\n    const [input, setInput] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const sendPost = e => {\r\n        e.preventDefault(); \r\n\r\n        db.collection('posts').add({\r\n            name: user.displayName,\r\n            description: user.email,\r\n            message: input,\r\n            photoUrl: user.photoUrl || '',\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setInput(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => (\r\n            setPosts(snapshot.docs.map(doc =>(\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }\r\n            )))\r\n\r\n        ))\r\n\r\n    }, [])\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon />\r\n                    <form>\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" placeholder=\"Start a post\" />\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"feed__inputOptions\">\r\n                    \r\n                <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\" /> \r\n                <InputOption Icon={SubscriptionsIcon} title=\"Video\" color=\"#E7A33E\" /> \r\n                <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\" /> \r\n                <InputOption Icon={CalendarViewDayIcon} title=\"Write article\" color=\"#7FC15E\" /> \r\n                \r\n                </div>\r\n            </div>\r\n\r\n                \r\n                <FlipMove>\r\n                {posts.map(({ id, data: { name, description, message, photoUrl } }) =>(\r\n                    <Post \r\n                    key={id}\r\n                    name={name}\r\n                    description={description}\r\n                    message={message}\r\n                    photoUrl={photoUrl}\r\n\r\n                    />\r\n                ))}\r\n\r\n                </FlipMove>\r\n                \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Feed;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from \"./features/userSlice\"\r\nimport { auth } from \"./firebase\";\r\nimport './Login.css';\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault(); \r\n        \r\n        auth.signInWithEmailAndPassword( email, password)\r\n        .then((userAuth) => {\r\n            dispatch(\r\n                login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: userAuth.displayName,\r\n                    photoURL: userAuth.photoURL,\r\n                })\r\n            );\r\n        })\r\n        .catch((error) => alert(\"error\"));\r\n    };\r\n\r\n\r\n    const register = () => {\r\n        if (!name) {\r\n            return alert(\"Please enter a full name!\")\r\n        }\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then((userAuth) => {\r\n            userAuth.user.updateProfile({\r\n                displayName: name,\r\n                photoURL: profilePic,\r\n            })\r\n            .then(() => {\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: name,\r\n                    photoURL: profilePic,\r\n                })\r\n                );\r\n            });\r\n        })\r\n        .catch((error) => alert(error));\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <img\r\n              src=\"/logo2.png\"\r\n              alt=\"\"\r\n            />\r\n            <form>\r\n\r\n            <input value={name} onChange={e => setName(e.target.value)} type=\"text\" placeholder=\"Full name (required if registering)\" />\r\n            \r\n            <input value={profilePic} onChange={e => setProfilePic(e.target.value)} type=\"text\" placeholder=\"Profile pic URL (optional)\" />\r\n            \r\n            <input value={email} onChange={e => setEmail(e.target.value)} type=\"email\" placeholder=\"Email\" />\r\n            \r\n            <input value={password} onChange={e => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\r\n            \r\n            <button type=\"submit\" onClick={loginToApp}> Sign In</button> \r\n\r\n            </form>\r\n\r\n            <p>\r\n                Not a member? {\"\"}\r\n                <span className=\"login__register\" onClick={register}\r\n                >Register Now</span>\r\n            </p>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport \"./Widgets.css\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\nfunction Widgets() {\r\n \r\n const newsArticle = (heading, subtitle) => (\r\n   <div className=\"widgets__article\">\r\n     \r\n     <div className=\"widgets__articleLeft\">\r\n       <FiberManualRecordIcon />\r\n     </div>\r\n\r\n     <div className=\"widgets__articleRight\">\r\n       <h4>{heading}</h4>\r\n       <p>{subtitle}</p>\r\n     </div>\r\n     \r\n   </div>\r\n );\r\n \r\n \r\n  return (\r\n    <div className=\"widgets\">\r\n      <div className=\"widgets__top\">\r\n        <h2>LinkedIn News</h2>\r\n        <InfoIcon />\r\n      </div>\r\n\r\n      {newsArticle(\"Wow! is back\", \"Top news- 309 readers\")}\r\n      {newsArticle(\"Dude is back\", \"Top news- 9099 readers\")}\r\n      {newsArticle(\"Osmm is back\", \"Top news- 5099 readers\")}\r\n      {newsArticle(\"Nice is back\", \"Top news- 6059 readers\")}\r\n      {newsArticle(\"Good is back\", \"Top news- 2119 readers\")}\r\n      {newsArticle(\"Bester is back\", \"Top news- 4559 readers\")}\r\n      {newsArticle(\"Best is back\", \"Top news- 6019 readers\")}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Widgets\r\n\r\n\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './features/userSlice'\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport Widgets from './Widgets';\n\nfunction App() {\n  \n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n\n        // user is logged in\n        dispatch( \n          login({\n            email: userAuth.email,\n            uid: userAuth.uid,\n            displayName: userAuth.displayName,\n            photoURL: userAuth.photoURL || '',\n          })\n        );\n\n      } else {\n\n        // user is logged in\n        dispatch( logout() );\n\n      }\n    });\n  }, []);\n\n  return (  \n\n    <div className=\"App\"> \n\n        <Header /> \n\n        {!user ? (\n          <Login />\n        ) : (\n          <div className=\"app__body\">\n\n          <Sidebar />\n          <Feed />\n          <Widgets />\n\n        </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n  ","import { configureStore } from '@reduxjs/toolkit';\nimport useReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: useReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}